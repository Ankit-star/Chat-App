{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","renderMessages","keys","Object","key","lastMessageKey","width","title","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","clasName","textAlign","marginBottom","required","align","App","getItem","projectID","renderChatFeed","chatAppProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aebe285.chunk.js","sourcesContent":["import React from 'react'\r\nimport {useState} from \"react\";\r\nimport {sendMessage, isTyping} from \"react-chat-engine\";\r\nimport {SendOutlined,PictureOutlined} from \"@ant-design/icons\";\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const {chatId,creds} = props\r\n    const handleSubmit =(event) =>{\r\n        event.preventDefault();\r\n        const text = value.trim();\r\n\r\n        if(text.length>0) sendMessage(creds,chatId,{text})\r\n        setValue('');\r\n        }\r\n    const handleChange =(event) =>{\r\n        setValue(event.target.value);\r\n        isTyping(props,chatId);\r\n    }\r\n    const handleUpload =(event) =>{\r\n        sendMessage(creds,chatId,{files:event.target.files,text:\"\"});\r\n    }\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-outlined\"/>\r\n                </span>\r\n            </label>\r\n            <input \r\n                type=\"file\" \r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{display: \"none\"}}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\"/>\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm\r\n","import React from 'react'\r\n\r\nconst MyMessage = ({message}) => {\r\n    if(message?.attachments?.length > 0){\r\n        return(\r\n            <img src={message.attachments[0].file} \r\n            alt=\"message-attachment\" \r\n            className=\"message-image\"\r\n            style={{float : \"right\"}}/>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"message\" style={{float : \"right\", marginRight : \"18px\", color : \"white\", backgroundColor : \"#3B2A50\"}}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage\r\n","import React from 'react'\r\n\r\nconst TheirMessage = ({lastMessage,message}) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n    return (\r\n        <div className=\"message-row\">\r\n           {isFirstMessageByUser && (\r\n               <div\r\n                    className=\"message-avatar\"\r\n                    style={{backgroundImage : `url(${message?.sender?.avatar})`}}\r\n               />\r\n\r\n           )} \r\n           {message?.attachments?.length > 0\r\n                ? (\r\n                    <img \r\n                        src={message.attachments[0].file} \r\n                        alt=\"message-attachment\" \r\n                        className=\"message-image\"\r\n                        style={{marginLeft : isFirstMessageByUser ? \"4px\" : \"48px\"}}\r\n                    />\r\n                ): (\r\n                    <div className=\"message\" style={{float : \"left\", backgroundColor : \"#CABCDC\", marginLeft : isFirstMessageByUser ? \"4px\" : \"48px\"}}>\r\n                        {message.text}\r\n                    </div>\r\n                )\r\n            } \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TheirMessage\r\n","import React from 'react'\r\nimport MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\nconst ChatFeed = (props) => {\r\n    const {chats,activeChat,userName,messages} = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message,isMyMessage) => {\r\n        return chat.people.map((person,index) => person.last_read === message.id && (\r\n            <div\r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{float: isMyMessage?\"right\":\"left\", backgroundImage : `url(${person?.person?.avatar})`}}\r\n            /> \r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n        return keys.map((key,index) => {\r\n            const message = messages(key);\r\n            const lastMessageKey = index===0 ? null : keys[index-1];\r\n            const isMyMessage = userName===message.sender.username;\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{width:\"100%\"}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                            ? <MyMessage message={message}/>\r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]}/>\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{marginRight:isMyMessage ? \"18px\" : \"0px\", marginLeft:isMyMessage ? \"0px\" : \"68px\"}}>\r\n                        {renderReadReceipts(message,isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    renderMessages()\r\n    if(!chat) return \"Loading...\"\r\n    return (\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat?.title}</div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => `${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{height:\"100px\"}} />\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId={activeChat}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatFeed\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport axios from \"axios\"\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const authObject = {\"Projext-ID\":\"beb588f0-bd86-4441-88f6-15a9aaa71012\", \"User-Name\":username, \"User-Secret\":password}\r\n        try {\r\n            await axios.get(\"https://api.chatengine.io/chats\",{headers:authObject});\r\n\r\n            localStorage.setItem(\"username\",username);\r\n            localStorage.setItem(\"password\",password);\r\n\r\n            window.location.reload();\r\n        }\r\n        catch(error){\r\n            setError(\"Oops, incorrect credentials.\")             \r\n        }\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 clasName=\"title\" style={{textAlign:\"center\", marginBottom:\"4px\"}}>Chat Application</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required/>\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required/>\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className=\"error\">{error}</h2>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import {ChatEngine} from \"react-chat-engine\"\nimport ChatFeed from \"./components/ChatFeed\"\nimport LoginForm from \"./components/LoginForm\"\n\nimport \"./App.css\"\n\n\nconst App = () => {\n  if(!localStorage.getItem(\"username\")) return <LoginForm/>\n  return (\n    <ChatEngine \n        height = \"100vh\"\n        projectID = \"beb588f0-bd86-4441-88f6-15a9aaa71012\"\n        userName = {localStorage.getItem(\"username\")}\n        password = {localStorage.getItem(\"password\")}\n        renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps}/>}\n    />\n  );\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}